# If you use a PIR sensor,will be motion based, we want a low threshold and a long history
# A cheap PIR sensor is motion based and will have a lot of noise, so a long window with a large threshold would
# work well (30 seconds window, rising edge 30%, falling edge 10%)
# An mmWave sensor will be a lot more accurate, so a small window makes sense (10 seconds, rising 20%, falling 10%)
gpio_debug = true
gpio_use_mock = false
sensor_pin = 2
sensor_poll_period_secs = 1
sensor_monitor_window_seconds = 10
rising_edge_occupancy_threshold_pct = 20
falling_edge_vacancy_threshold_pct = 10

# Minimum wait before ambience mode goes to no-presence mode. If presence is detected, the timeout is reset.
vacancy_motion_timeout_seconds = 30

# Restart apps by default on crash?
restart_cmd_wait_time_seconds = 3
restart_cmd_on_unexpected_exit = false
crash_on_repeated_cmd_failure_count = 10

# Apps to launch when presence is detected
on_occupancy_cmd0 = /home/batman/homeboard/bin/wl-display-toggle on
on_crash_restart_occupancy_cmd0 = false

on_occupancy_cmd1 = /home/batman/homeboard/bin/hackswayimg /home/batman/homeboard/cfg/hackswayimg.cfg /dev/shm/ambience_img
on_crash_restart_occupancy_cmd1 = true

on_occupancy_cmd2 = /home/batman/homeboard/bin/ambiencesvc /home/batman/homeboard/cfg/ambiencesvc.json
on_crash_restart_occupancy_cmd1 = true

on_vacancy_cmd0 = /home/batman/homeboard/bin/wl_display_toggle off
on_crash_restart_vacancy_cmd0 = false

